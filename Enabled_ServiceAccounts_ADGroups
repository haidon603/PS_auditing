#Service Accounts that are enabled but haven't been logged into - 
Write-Output 'this is a script for retrieving inactive, yet enabled 03333 Service Account - Email Resource service accounts that have not been logged in to for 90 days'
$90DaysfromToday = (get-date).adddays(-90)

(Get-ADUser -filter  {(lastlogondate -notlike "*" -OR lastlogondate -le $90days) 
    -AND (passwordlastset -le $90days) 
    -AND (enabled -eq $True) -AND (PasswordNeverExpires -eq $false) -AND (whencreated -le $90days) -AND (EMP-IDType -eq "03333")} -Properties * |
Sort-Object -Property @{Expression = {$_.LastLogonDate}; Ascending = $False})|

Select-Object LastLogonDate, CN, Created, PasswordLastSet, LastBadPasswordAttempt, PasswordNeverExpires, AccountExpirationDate, Description, EmailAddress, EMP-Other-Notes, Department, Title, ObjectClass, proxyAddresses, Enabled |
Out-GridView

#Find Inactive AD accounts where displayName attribute starts with “SVC” or “AGC” (disregards EMP-ID)
Write-Output 'this is a script for retrieving inactive, yet enabled AGC service accounts that have not been logged in to for 90 days'
$90Days = (get-date).adddays(-90)

(Get-ADUser -filter  {(lastlogondate -notlike "*" -OR lastlogondate -le $90days)
    -AND (passwordlastset -le $90days) 
    -AND (enabled -eq $True) -AND (PasswordNeverExpires -eq $false) -AND (whencreated -le $90days)} -Properties * |
Sort-Object -Property @{Expression = {$_.LastLogonDate}; Ascending = $False})| Where-object {($_.displayName -match "AGC|SVC")}|
Select-Object LastLogonDate, CN, Created, PasswordLastSet, LastBadPasswordAttempt, PasswordNeverExpires, AccountExpirationDate, Description, EmailAddress, EMP-Other-Notes, Department, Title, ObjectClass, proxyAddresses, Enabled |
Out-GridView 


#Finds ENABLED USER object accounts that have been inactive for 100 days i.e not logged into
#Can be easily changed to also get computer accounts – more high level
$excludeList = 'User'
$properties  = 'SamAccountName', 'LastLogonDate', 'EmployeeID', 'Emp-IDType'
Search-ADAccount –AccountInActive –TimeSpan 100:00:00:00 | ?{$_.Enabled –eq $True} | 
Get-ADUser -Properties $properties |
Sort-Object -Property @{Expression = {$_.LastLogonDate}; Ascending = $False} | 
Select-Object LastLogonDate, Name, SamAccountName, DistinguishedName,  ObjectClass, PasswordExpired, Emp-IDType |
Out-GridView

#find null last logon, shows enabled and disabled accounts
#find employee type classified employee ID accounts where last logon is null 

(Get-ADUser -LDAPFilter "(&(!lastLogonTimestamp=*)(EMP-IDType=02222))" -Properties * | 
Select-Object LastLogonDate, Enabled, Name, SamAccountName,  ObjectClass, PasswordExpired, AccountExpirationDate, Emp-IDType, Department | 
Sort-Object -Property @{Expression = {$_.Enabled}; Ascending = $False})|
Out-GridView  

#Empty Groups in the Domain
Get-ADGroup -Filter * -Properties * | 
where {-not $_.members} | 
select Name, SamAccountName, ObjectClass | Out-GridView 
